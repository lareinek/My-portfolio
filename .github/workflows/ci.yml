
name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
   AWS_REGION: us-east-1
   ECR_REGISTRY: 515966511128.dkr.ecr.us-east-1.amazonaws.com
   ECR_REPOSITORY: docker-resume-app
   IMAGE_TAG: latest

jobs:

  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: |
          docker build -t ${{secrets.REGISTRY_USER}}/my-portfolio:${{github.run_number}} .
          docker build -t ${{secrets.REGISTRY_USER}}/my-portfolio .
      - name: Push image
        run: |
          docker login -u ${{secrets.REGISTRY_USER}} -p ${{secrets.REGISTRY_PASS}}
          docker push ${{secrets.REGISTRY_USER}}/my-portfolio:${{github.run_number}}
          docker push ${{secrets.REGISTRY_USER}}/my-portfolio

  scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.12.0
        with:
          image-ref: ${{secrets.REGISTRY_USER}}/my-portfolio:${{github.run_number}}
          format: table
          exit-code: 0   # dont fail pipeline if critical/high found (1 if i want it to fail)
          severity: CRITICAL,HIGH

  deploy:
    needs: scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo for Dockerfile
        uses: actions/checkout@v4
      - name: SSH to Server 
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: 
              docker rm -f resume || true
              docker run -d --name resume -p 8080:5001 ${{secrets.REGISTRY_USER}}/my-portfolio:${{github.run_number}}

     # --- PUSH AWS ECR ---
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}          # <-- tes secrets AWS
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # <-- tes secrets AWS
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build Docker image for ECR
        run: |
          docker build -t $ECR_REPOSITORY .

      - name: Tag Docker image for ECR
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          